from aiogram.dispatcher import FSMContext
from aiogram import Dispatcher
from create_bot import dp
from keyboards import *
from states.comment_states import CommentToOrder
from user_handlers.handler import del_mes, delete_message_from_dict


async def comment(query: types.CallbackQuery):
    await CommentToOrder.write_comment.set()
    message = await dp.bot.send_message(chat_id=query.message.chat.id,
                                        text='–í–≤–µ–¥—ñ—Ç—å –ø—Ä–∏–º—ñ—Ç–∫—É.\n'
                                             '–ü—Ä–∏–∫–ª–∞–¥:\n'
                                             '<b>–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏</b>\n'
                                             '<b>"–®—Ç—Ä–∏—Ö"</b> - —à—Ç—Ä–∏—Ö–∫–æ–¥–∏\n'
                                             '<b>"–°–µ—Ä—Ç"</b> - —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç\n'
                                             '<b>"–¢–¢–ù"</b> - —Ç–æ–≤–∞—Ä–æ-—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞ –Ω–∞–∫–ª–∞–¥–Ω–∞\n',
                                        reply_markup=cancel_state())
    del_mes.add_message(chat_id=query.message.chat.id, message_id=message)
    await delete_message_from_dict(chat=query.message.chat.id)


async def stop_comment(query: types.CallbackQuery, state: FSMContext):
    current_state = state.get_state()
    if current_state is None:
        return
    await state.finish()
    message = await query.bot.send_message(text='*–î—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ*\n'
                                                '1. –ù–∞—Ç–∏—Å–Ω—ñ—Å—Ç—å <b>üõçÔ∏è –¢–æ–≤–∞—Ä–∏</b>, —â–æ–± –ø–æ—á–∞—Ç–∏ —Ñ–æ—Ä–º—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.\n'
                                                '2. <b>üõí –ö–æ—Ä–∑–∏–Ω–∞</b>, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–∞–º–æ–≤–ª–µ–Ω–Ω—è.\n'
                                                '3. <b>‚öô –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</b>, —â–æ–± –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ—ó –ø–æ–±–∞–∂–∞–Ω–Ω—è —á–∏ –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏.',
                                           reply_markup=order_menu_kb(),
                                           chat_id=query.message.chat.id)
    del_mes.add_message(chat_id=query.message.chat.id, message_id=message)
    await delete_message_from_dict(chat=query.message.chat.id)


async def write_comment(message: types.Message, state: FSMContext):
    async with state.proxy() as data_comment:
        data_comment['comment'] = message.text
        print(tuple(data_comment.values()))
    await sqlite_db.update_comment(message.from_user.id, state)
    await state.finish()
    message = await message.answer(text='*–ü—Ä–∏–º—ñ—Ç–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–∞*\n'
                                        '1. –ù–∞—Ç–∏—Å–Ω—ñ—Å—Ç—å <b>üõçÔ∏è –¢–æ–≤–∞—Ä–∏</b>, —â–æ–± –ø–æ—á–∞—Ç–∏ —Ñ–æ—Ä–º—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.\n'
                                        '2. <b>üõí –ö–æ—Ä–∑–∏–Ω–∞</b>, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–∞–º–æ–≤–ª–µ–Ω–Ω—è.\n'
                                        '3. <b>‚öô –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</b>, —â–æ–± –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ—ó –ø–æ–±–∞–∂–∞–Ω–Ω—è —á–∏ –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏.',
                                   reply_markup=order_menu_kb())
    del_mes.add_message(chat_id=message.chat.id, message_id=message)
    await delete_message_from_dict(chat=message.chat.id)


def comment_order_handlers(dp: Dispatcher):
    dp.register_callback_query_handler(comment, Cat_KB.filter(action='comment'), state=None)
    dp.register_callback_query_handler(stop_comment, Cat_KB.filter(action='stop_comment'), state='*')
    dp.register_message_handler(write_comment, state=CommentToOrder.write_comment)
    dp.register_callback_query_handler(stop_comment, Cat_KB.filter(action='stop_comment'), state='*')
